@model KE03_INTDEV_SE_2_Base.Models.DashboardViewModel

@{
    ViewData["Title"] = "Dashboard";

    var ordersLabelsJson = System.Text.Json.JsonSerializer.Serialize(Model.OrdersPerMonth.Select(x => x.Month));
    var ordersDataJson = System.Text.Json.JsonSerializer.Serialize(Model.OrdersPerMonth.Select(x => x.Count));

    var customersLabelsJson = System.Text.Json.JsonSerializer.Serialize(Model.CustomersPerMonth.Select(x => x.Month));
    var customersDataJson = System.Text.Json.JsonSerializer.Serialize(Model.CustomersPerMonth.Select(x => x.Count));
}

<div class="dashboard-grid">
    <div class="card">
        <h3>Totale omzet</h3>
        <p class="revenue">@Model.TotalRevenue.ToString("C")</p>
    </div>

    <div class="card">
        <h3>Orders per maand</h3>
        <canvas id="ordersChart"></canvas>
    </div>

    <div class="card">
        <h3>Klanten geregistreerd per maand</h3>
        <canvas id="customersChart"></canvas>
    </div>

    <div class="card">
        <h3>Producten met lage voorraad</h3>
        <div class="table-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Voorraad</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var p in Model.LowStockProducts)
                    {
                        <tr>
                            <td>@p.Name</td>
                            <td>@p.StockQuantity</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const ordersLabels = @Html.Raw(ordersLabelsJson);
        const ordersData = @Html.Raw(ordersDataJson);
        const customersLabels = @Html.Raw(customersLabelsJson);
        const customersData = @Html.Raw(customersDataJson);
    </script>
    <script src="~/js/dashboard.js"></script>
}
